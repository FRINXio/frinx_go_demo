/*
 * unified
 *
 * API generated from yang definitions: [fake,frinx-acl-extension,frinx-bfd,frinx-bfd-extension,frinx-bgp-extension,frinx-cdp,frinx-cisco-if-extension,frinx-cisco-mpls-te-extension,frinx-cisco-ospf-extension,frinx-cisco-pf-interfaces-extension,frinx-damping,frinx-dasan-vlan-extension,frinx-event-types,frinx-evpn,frinx-evpn-types,frinx-hsrp,frinx-if-aggregate-extension,frinx-isis-extension,frinx-juniper-if-aggregate-extension,frinx-juniper-if-extension,frinx-juniper-pf-interfaces-extension,frinx-juniper-probes-extension,frinx-l3ipvlan,frinx-lacp-lag-member,frinx-logging,frinx-mpls-ldp-extension,frinx-mpls-rsvp-extension,frinx-netflow,frinx-openconfig-acl,frinx-openconfig-bfd,frinx-openconfig-bgp,frinx-openconfig-bgp-policy,frinx-openconfig-bgp-types,frinx-openconfig-extensions,frinx-openconfig-if-aggregate,frinx-openconfig-if-ethernet,frinx-openconfig-if-ip,frinx-openconfig-if-ip-ext,frinx-openconfig-inet-types,frinx-openconfig-interfaces,frinx-openconfig-isis,frinx-openconfig-isis-lsdb-types,frinx-openconfig-isis-policy,frinx-openconfig-isis-types,frinx-openconfig-lacp,frinx-openconfig-lldp,frinx-openconfig-lldp-types,frinx-openconfig-local-routing,frinx-openconfig-mpls,frinx-openconfig-mpls-ldp,frinx-openconfig-mpls-rsvp,frinx-openconfig-mpls-types,frinx-openconfig-network-instance,frinx-openconfig-network-instance-l3,frinx-openconfig-network-instance-policy,frinx-openconfig-network-instance-types,frinx-openconfig-ospf-policy,frinx-openconfig-ospf-types,frinx-openconfig-ospfv2,frinx-openconfig-packet-match,frinx-openconfig-packet-match-types,frinx-openconfig-platform,frinx-openconfig-platform-linecard,frinx-openconfig-platform-port,frinx-openconfig-platform-transceiver,frinx-openconfig-platform-types,frinx-openconfig-policy-forwarding,frinx-openconfig-policy-types,frinx-openconfig-probes,frinx-openconfig-probes-types,frinx-openconfig-qos,frinx-openconfig-qos-types,frinx-openconfig-rib-bgp,frinx-openconfig-rib-bgp-ext,frinx-openconfig-rib-bgp-types,frinx-openconfig-routing-policy,frinx-openconfig-transport-types,frinx-openconfig-types,frinx-openconfig-vlan,frinx-openconfig-vlan-types,frinx-openconfig-yang-types,frinx-ospf-extension,frinx-qos-extension,frinx-snmp,frinx-uniconfig-topology,iana-if-type,ietf-inet-types,ietf-interfaces,ietf-yang-types,network-topology,network-topology,unified-topology,yang-ext]
 *
 * API version: 4.2.0.frinx
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger_unified

// Optional[Configuration parameters for the interface on which OSPFv2 is enabled] REF:Optional.empty
type FrinxOpenconfigNetworkInstanceNetworkinstancesNetworkinstanceProtocolsProtocolOspfv2AreasAreaInterfacesInterfaceConfig struct {
	// Optional[When the specified interface is included in more than one area's configuration, this leaf marks whether the area should be considered the primary (when the value is true). In the case that this value is false, the area is considered a secondary area.] REF:Optional.empty
	MultiAreaAdjacencyPrimary bool `json:"multi-area-adjacency-primary,omitempty"`
	// Optional.empty REF:Optional.empty
	FrinxOspfExtensionenabled bool `json:"frinx-ospf-extension:enabled,omitempty"`
	// Optional[The type of authentication that should be used on this interface] REF:Optional.empty
	AuthenticationType string `json:"authentication-type,omitempty"`
	// Optional[The metric for the interface] REF:Optional.empty
	Metric int32 `json:"metric,omitempty"`
	// Optional[An operator-specified string utilised to uniquely reference this interface] REF:Optional.empty
	Id string `json:"id,omitempty"`
	// Optional[The local system's priority to become the designated router] REF:Optional.empty
	Priority int32 `json:"priority,omitempty"`
	// Optional[When this leaf is set to true, the network connected to the interface should be hidden from OSPFv2 advertisements per the procedure described in RFC6860.] REF:Optional[RFC6860 - Hiding Transit-Only Networks in OSFF]
	HideNetwork bool `json:"hide-network,omitempty"`
	// Optional[When this leaf is set to true, the interface should be advertised within the OSPF area but OSPF adjacencies should not be established over the interface] REF:Optional.empty
	Passive bool `json:"passive,omitempty"`
	// Optional[The type of network that OSPFv2 should use for the specified interface.] REF:Optional.empty
	NetworkType *FrinxOpenconfigOspfv2NetworkTypeIdentityref `json:"network-type,omitempty"`
}
